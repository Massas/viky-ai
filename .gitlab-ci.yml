stages:
  - prerequist
  - build
  - test
  - docker_tag
  - deploy
  - admin

variables:
  SKIP_TEST: "true"
  GIT_SUBMODULE_STRATEGY: none
  DOCKER_IMAGE_APP: $CI_REGISTRY_IMAGE/app
  DOCKER_IMAGE_NLP: $CI_REGISTRY_IMAGE/nlp
  DOCKER_IMAGE_TOOLS_NLP: $CI_REGISTRY_IMAGE/tools_nlp_base
  DOCKER_IMAGE_TOOLS_BACKUP: $CI_REGISTRY_IMAGE/tools_backup

image: vikyai/tools-gitlab-auto-deploy-image:latest
before_script:
  # load auto-deploy if exits (not in test)
  - if [ -f /auto-deploy.sh ]; then . /auto-deploy.sh ; fi

.kubernetes_runner:
  tags:
    - kubernetes
  variables:
    CI_SERVICE_HOST: "127.0.0.1"

# Build docker image
build_backup:
  extends: .kubernetes_runner
  stage: build
  script:
    - docker_build ${DOCKER_IMAGE_TOOLS_BACKUP} deployment/docker_tools/backup

build_webapp:
  extends: .kubernetes_runner
  stage: build
  script:
    - docker_build ${DOCKER_IMAGE_APP}      webapp "--target image_ruby_run"
    - docker_build ${DOCKER_IMAGE_APP}_test webapp "--target image_ruby_test"

build_nlp:
  extends: .kubernetes_runner
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - docker_build ${DOCKER_IMAGE_NLP}      nlp "--build-arg VIKY_IMAGE_TAG=${CI_COMMIT_REF_SLUG} --target run_image"
    - docker_build ${DOCKER_IMAGE_NLP}_test nlp "--build-arg VIKY_IMAGE_TAG=${CI_COMMIT_REF_SLUG} --target test_image"

# Test
test_webapp:
  extends: .kubernetes_runner
  stage: test
  image: ${DOCKER_IMAGE_APP}_test:${CI_COMMIT_REF_SLUG}
  needs:
    - "build_webapp"
  variables:
    POSTGRES_USER: superman
    POSTGRES_PASSWORD: sup_3rman
    POSTGRES_DB: vikyapp_test
    ES_JAVA_OPTS: "-Xms128m -Xmx392m"
  services:
    - postgres:11.5-alpine
    - redis:5.0-alpine
    - name: selenium/standalone-chrome:3.141.59
      alias: selenium-chrome
    - name: docker.elastic.co/elasticsearch/elasticsearch:7.3.2
      # Important other wise, port 9200 will never be exposed
      command:
        [
          "bin/elasticsearch",
          "-Ediscovery.type=single-node",
          "-Enetwork.host=0.0.0.0",
        ]
      alias: elasticsearch
  script:
    - export VIKYAPP_DB_USERNAME="${POSTGRES_USER}"
    - export VIKYAPP_DB_PASSWORD="${POSTGRES_PASSWORD}"
    - export VIKYAPP_DB_HOST="${CI_SERVICE_HOST:-postgres}"
    - export VIKYAPP_ACTIONCABLE_REDIS_URL="redis://${CI_SERVICE_HOST:-redis}:6379/1"
    - export VIKYAPP_ACTIVEJOB_REDIS_URL="redis://${CI_SERVICE_HOST:-redis}:6379/2"
    - export VIKYAPP_STATISTICS_URL="http://${CI_SERVICE_HOST:-elasticsearch}:9200"
    - export SELENIUM_REMOTE_URL="http://${CI_SERVICE_HOST:-selenium-chrome}:4444/wd/hub/"
    - export VIKYAPP_STATISTICS_NO_REPLICA="true"
    - cd /webapp
    - if [ "${SKIP_TEST:-false}" != "true" ]; then ./bin/docker_run_test.sh unit ; fi
  artifacts:
    # expire_in: 1 week
    reports:
      junit: "reports/TEST-*.xml"

test_nlp:
  extends: .kubernetes_runner
  stage: test
  needs:
    - "build_nlp"
  image: ${DOCKER_IMAGE_NLP}_test:${CI_COMMIT_REF_SLUG}
  services:
    - redis:5.0-alpine
  variables:
    GIT_STRATEGY: none
  script:
    - export VIKYAPP_REDIS_PACKAGE_NOTIFIER="redis://${CI_SERVICE_HOST:-redis}:6379/3"
    - if [ "${SKIP_TEST:-false}" != "true" ]; then /docker_run_test.sh ; fi
  artifacts:
    # expire_in: 1 week
    reports:
      junit:
        - "reports/TEST-*.xml"

# Tag docker image to lasted
tag_webapp:
  extends: .kubernetes_runner
  stage: docker_tag
  only:
    - develop
  variables:
    GIT_STRATEGY: none
  script:
    - docker_tag_latest ${DOCKER_IMAGE_APP}
    - docker_tag_latest ${DOCKER_IMAGE_APP}_test

tag_nlp:
  extends: .kubernetes_runner
  stage: docker_tag
  needs:
    - "build_nlp"
    - "test_nlp"
  only:
    - develop
  variables:
    GIT_STRATEGY: none
  script:
    - docker_tag_latest ${DOCKER_IMAGE_NLP}

tag_ruby_base:
  extends: .kubernetes_runner
  stage: docker_tag
  only:
    - develop
  variables:
    GIT_STRATEGY: none
  script:
    - docker_tag_latest ${DOCKER_IMAGE_TOOLS_RUBY}

tag_backup:
  extends: .kubernetes_runner
  stage: docker_tag
  only:
    - develop
  variables:
    GIT_STRATEGY: none
  script:
    - docker_tag_latest ${DOCKER_IMAGE_TOOLS_BACKUP}

# Deploy generic job

.deploy_branches:
  except:
    - develop
    - master
    - tags
  environment:
    name: dev-${CI_COMMIT_REF_NAME}
    url: https://viky-${CI_ENVIRONMENT_SLUG}-kube.viky.ai
  variables:
    S3_ACCESS_KEY: ${S3_ACCESS_KEY}
    S3_SECRET_KEY: ${S3_SECRET_KEY}
    HELM_RELEASE_NAME: "viky-branches"
    HELM_VALUES: "custom-values.yml,viky/custom-values/dev.yaml"
    # ASN cluster
    KUBECONFIG_URL: "${CI_BUILDS_DIR}/deployment/kubernetes/config/config.yml"
    KUBE_NAMESPACE: viky

.deploy_develop:
  only:
    - develop
  except:
    - tags
  environment:
    name: dev-${CI_COMMIT_REF_NAME}
    url: https://viky-${CI_ENVIRONMENT_SLUG}-kube.viky.ai
  variables:
    S3_ACCESS_KEY: ${S3_ACCESS_KEY}
    S3_SECRET_KEY: ${S3_SECRET_KEY}
    HELM_RELEASE_NAME: "viky-develop"
    HELM_VALUES: "custom-values.yml,viky/custom-values/preproduction.yaml"

.deploy_preprod:
  only:
    - master
  except:
    - tags
  environment:
    name: viky-preprod
    url: https://viky-beta-kube.viky.ai
  variables:
    HELM_RELEASE_NAME: "viky_preprod"
    VIKYAPP_AUTO_BACKUP: "true"
  variables:
    S3_ACCESS_KEY: ${S3_ACCESS_KEY}
    S3_SECRET_KEY: ${S3_SECRET_KEY}
    VIKYAPP_AUTO_BACKUP: "true"
    HELM_RELEASE_NAME: "viky-preprod"
    HELM_VALUES: "custom-values.yml,viky/custom-values/preproduction.yaml"

.deploy:
  extends: .kubernetes_runner
  stage: deploy
  needs:
    - build_backup
    - build_webapp
    - build_nlp
    - test_webapp
    - test_nlp
  variables:
    VIKY_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}
    HELM_TIMEOUT: "900"
    HELM_EXTRA_OPTIONS: "--wait"
  script:
    - kube_setup
    # current deployment status
    - helm history "${RELEASE_NAME}" || true
    - helm status  "${RELEASE_NAME}" || true
    # backup current env
    - kubectl exec $(kube_get_pods "app=viky-webapp-backup") bash /backup/backup.sh || true
    # Go to Kubernetes directory
    - cd deployment/kubernetes/
    - bin/generate-ci-override-values.sh
    # Deploy Viky Platform
    - HELM_OPTIONS="--install ${HELM_EXTRA_OPTIONS} --timeout ${HELM_TIMEOUT}  --values ${HELM_VALUES}"
    - helm upgrade ${HELM_OPTIONS} "${RELEASE_NAME}" ./viky/

# Deploy any branches on dev
deploy_branches:
  environment:
    name: dev-${CI_COMMIT_REF_NAME}
    on_stop: delete_env
  extends:
    - .deploy
    - .deploy_branches

deploy_branches_forced:
  extends: deploy_branches
  environment:
    name: dev-${CI_COMMIT_REF_NAME}
    on_stop: delete_env
  when: manual
  variables:
    HELM_EXTRA_OPTIONS: "--force"

# Deploy any branches on dev
deploy_develop:
  environment:
    name: dev-${CI_COMMIT_REF_NAME}
    on_stop: delete_env
  extends:
    - .deploy
    - .deploy_develop

deploy_develop_forced:
  extends: deploy_develop
  environment:
    name: dev-${CI_COMMIT_REF_NAME}
    on_stop: delete_env
  when: manual
  variables:
    HELM_EXTRA_OPTIONS: "--force"

# Deploy master on preprod
deploy_preprod:
  extends:
    - .deploy
    - .deploy_preprod

deploy_preprod_forced:
  extends: deploy_preprod
  when: manual
  variables:
    HELM_EXTRA_OPTIONS: "--force"

# remove environment only for dev
delete_env:
  extends:
    - .kubernetes_runner
    - .deploy_branches
  environment:
    name: dev-${CI_COMMIT_REF_NAME}
    action: stop
  stage: admin
  needs:
    # dummy needs to allow it directly
    - "build_backup"
  variables:
    GIT_STRATEGY: none
  script:
    - kube_setup
    - helm history "${RELEASE_NAME}" || true
    - helm status  "${RELEASE_NAME}" || true
    - kubectl delete secret --ignore-not-found viky-infra-es-keystore-secret
    - kube_cleanup
  when: manual
  allow_failure: true

# invite admin user
.invite_admin:
  stage: admin
  variables:
    GIT_STRATEGY: none
  script:
    - kube_setup
    - PODNAME=$(kube_get_pods "app=viky-webapp")
    - kubectl exec ${PODNAME} ./bin/rails users:invite_admin[${GITLAB_USER_EMAIL}]
  when: manual
  allow_failure: true

invite_admin_dev:
  extends:
    - .kubernetes_runner
    - .deploy_branches
    - .invite_admin

# invite admin user
invite_admin_preprod:
  extends:
    - .kubernetes_runner
    - .deploy_preprod
    - .invite_admin


# backup
.backup:
  stage: admin
  variables:
    GIT_STRATEGY: none
  script:
    - kube_setup
    - PODNAME=$(kube_get_pods "app=viky-webapp-backup")
    - kubectl exec ${PODNAME}  bash /backup/backup.sh
  when: manual
  allow_failure: true

backup_dev:
  extends:
    - .kubernetes_runner
    - .deploy_branches
    - .backup

backup_preprod:
  extends:
    - .kubernetes_runner
    - .deploy_preprod
    - .backup


# backup restore only for dev
backup_restore:
  extends:
    - .kubernetes_runner
    - .deploy_branches
  stage: admin
  variables:
    GIT_STRATEGY: none
  script:
    - kube_setup
    - PODNAME=$(kube_get_pods "app=viky-webapp-backup")
    # backup current env
    - kubectl exec ${PODNAME}  bash /backup/backup.sh || true
    # restore base on viky-beta
    - kubectl exec ${PODNAME}  bash /backup/restore.sh "viky-beta"
    # delete pods to restart viky apps deployment
    - kubectl delete pods -l 'app in (viky-webapp-worker, viky-webapp, viky-nlp)'
  when: manual
  allow_failure: true


# update homepage and doc to latest image
.update_doc:
  stage: admin
  variables:
    GIT_STRATEGY: none
  needs:
    # dummy needs to allow it directly
    - "build_backup"
  script:
    # delete pods to restart viky apps deployment
    - kube_setup
    - kubectl delete pods -l 'app in (viky-doc)'
  when: manual
  allow_failure: true

update_doc_dev:
  extends:
    - .kubernetes_runner
    - .deploy_branches
    - .update_doc

update_doc_preprod:
  extends:
    - .kubernetes_runner
    - .deploy_preprod
    - .update_doc


# Get deployment status
.deploy_status:
  stage: admin
  variables:
    GIT_STRATEGY: none
  needs:
    # dummy needs to allow it directly
    - "build_backup"
  script:
    - kube_setup
    - helm history "${RELEASE_NAME}" || true
    - helm status  "${RELEASE_NAME}"
  when: manual
  allow_failure: true

deploy_status_dev:
  extends:
    - .kubernetes_runner
    - .deploy_branches
    - .deploy_status

deploy_status_preprod:
  extends:
    - .kubernetes_runner
    - .deploy_preprod
    - .deploy_status
