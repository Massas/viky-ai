stages:
  - build
  - test
  - deploy
  - setup
  - admin
  - cleanup

variables:
  GIT_SUBMODULE_STRATEGY: recursive

# Build docker image
build_image:
  stage: build
  variables:
    DOCKER_DRIVER: overlay
    VOQALAPP_DOCKER_IMAGE: docker-registry.pertimm.corp:50001/voqal.ai/platform/app
  image: docker:dind
  script:
    - "echo \"{ \\\"commit\\\": \\\"${CI_COMMIT_SHA}\\\", \\\"branch\\\": \\\"${CI_COMMIT_REF_SLUG}\\\", \\\"tag\\\": \\\"${CI_COMMIT_TAG}\\\" }\" > ./webapp/voqal_version.json"
    - docker build --target image_ruby_run -t ${VOQALAPP_DOCKER_IMAGE}:latest -t ${VOQALAPP_DOCKER_IMAGE}:${CI_COMMIT_REF_SLUG} webapp
    - docker push ${VOQALAPP_DOCKER_IMAGE}:latest
    - docker push ${VOQALAPP_DOCKER_IMAGE}:${CI_COMMIT_REF_SLUG}

# Deploy any branches on rancher dev
deploy_branch:
  stage: deploy
  image: docker-registry.pertimm.corp:50001/pertimm/docker-rancher-cli:latest
  dependencies:
    - build_image
  environment:
    name: ${CI_COMMIT_REF_NAME}
    url: https://voqal-platform-${CI_ENVIRONMENT_SLUG}.voqal.ai
    on_stop: delete_env
  variables:
    VOQALAPP_DEPLOY_RANCHER_STACK: voqal-platform-${CI_ENVIRONMENT_SLUG}
    VOQALAPP_BASEURL: https://voqal-platform-${CI_ENVIRONMENT_SLUG}.voqal.ai
  script:
    - echo "Deploy ${VOQALAPP_DEPLOY_RANCHER_STACK} on ${RANCHER_URL}/dev ( ${CI_ENVIRONMENT_URL} )"
    - cd deployment
    - rancher --debug --environment dev up --stack ${VOQALAPP_DEPLOY_RANCHER_STACK} --file docker-compose.yml --file docker-compose-rancher.yml -d --pull --force-upgrade --confirm-upgrade

# remove environment
delete_env:
  stage: cleanup
  image: docker-registry.pertimm.corp:50001/pertimm/docker-rancher-cli:latest
  environment:
    name: ${CI_COMMIT_REF_NAME}
    url: https://voqal-platform-${CI_ENVIRONMENT_SLUG}.voqal.ai
    action: stop
  variables:
    GIT_STRATEGY: none
    VOQALAPP_DEPLOY_RANCHER_STACK: voqal-platform-${CI_ENVIRONMENT_SLUG}
    VOQALAPP_BASEURL: https://voqal-platform-${CI_ENVIRONMENT_SLUG}.voqal.ai
  script:
    - echo "Remove ${VOQALAPP_DEPLOY_RANCHER_STACK} on ${RANCHER_URL}/dev ( ${CI_ENVIRONMENT_URL} )"
    - cd deployment
    - rancher --debug --environment dev rm --stop --type stack ${VOQALAPP_DEPLOY_RANCHER_STACK}
  when: manual
  allow_failure: true

# invite admin user
invite_admin:
  stage: admin
  image: docker-registry.pertimm.corp:50001/pertimm/docker-rancher-cli:latest
  environment:
    name: ${CI_COMMIT_REF_NAME}
    url: https://voqal-platform-${CI_ENVIRONMENT_SLUG}.voqal.ai
  variables:
    GIT_STRATEGY: none
    VOQALAPP_DEPLOY_RANCHER_STACK: voqal-platform-${CI_ENVIRONMENT_SLUG}
    VOQALAPP_BASEURL: https://voqal-platform-${CI_ENVIRONMENT_SLUG}.voqal.ai
  script:
    - echo "Add user ${GITLAB_USER_EMAIL} as admin on ${VOQALAPP_DEPLOY_RANCHER_STACK} on ${RANCHER_URL}/dev ( ${CI_ENVIRONMENT_URL} )"
    - TASK_CMD="./bin/rails users:invite_admin[${GITLAB_USER_EMAIL}]"
    - rancher --environment dev exec ${VOQALAPP_DEPLOY_RANCHER_STACK}-app-1 ${TASK_CMD}
  when: manual
  allow_failure: true
